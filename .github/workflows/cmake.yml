name: Build TDLib w/ CMake

on:
  push:
    branches: [ main ]
    workflow_dispatch:

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        repository: tdlib/td
        fetch-depth: 0
        ref: "1d15bafb5003cf36dbfdd4c839dbcc56368fb48e"

    - name: Get Git Tag
      id: get-git-tag
      run: echo "::set-output name=git-tag::$(git describe --tags)"
 
    - name: Show Git Tag
      run: echo "Git Tag is ${{ steps.get-git-tag.outputs.git-tag }}"

    - name: Add gperf
      run: choco install gperf

    - name: Cache vcpkg
      uses: actions/cache@v2
      with:
        path: ~/AppData/Local/vcpkg/archives
        key: ${{ runner.os }}-vcpkg

    - name: Setup vcpkg
      run: C:/vcpkg/vcpkg.exe install openssl:x64-windows zlib:x64-windows

    - name: Configure CMake
      run: cmake -A x64 -B ${{github.workspace}}/build -DCMAKE_INSTALL_PREFIX:PATH=${{github.workspace}}/tdlib -DCMAKE_TOOLCHAIN_FILE:FILEPATH=C:/vcpkg/scripts/buildsystems/vcpkg.cmake

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --target install

    - name: Archive
      run: 7z a tdlib-${{ steps.get-git-tag.outputs.git-tag }}.zip ${{github.workspace}}/tdlib

    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        files: tdlib-*.zip
        tag_name: ${{ steps.get-git-tag.outputs.git-tag }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
